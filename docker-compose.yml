version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/snippets/:/etc/nginx/snippets/
      - ./nginx/keys/:/keys/
    depends_on:
      - pihole
      - grafana
      - influxdb
      - nextcloud
      - portainer
      - homer
      - sshwifty
      - qbittorrent
      - filebrowser
      - freshrss
      - ntfy
      - invidious
      - changedetection

  nginx-public:
    image: nginx:latest
    container_name: nginx-public
    restart: unless-stopped
    ports:
      - '8888:80'
      - '8443:443'
    volumes:
      - ./nginx/nginx-public.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/snippets/:/etc/nginx/snippets/
      - ./nginx/keys/:/keys/
    depends_on:
      - homer-public

  homer-public:
    container_name: homer-public
    image: b4bz/homer:latest
    volumes:
      - './docker-data/homer/www-assets/:/www/assets/'
      - './homer/public-config.yml:/www/assets/config.yml'
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "81:80/tcp"
    environment:
      TZ: 'Europe/Kiev'
      ServerIP: '192.168.0.2'
      DNS1: '1.1.1.1'
      CORS_HOSTS: pi.hole,prokopiv.xyz
    dns:
      - '1.1.1.1'
    volumes:
      - './docker-data/pihole/etc-pihole/:/etc/pihole/'
      - './docker-data/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    extra_hosts:
      - 'pi4:192.168.0.2'
      - 'thinkpad:192.168.0.12'
      - 'op7pro:192.168.0.10'
      - 'op6:192.168.0.11'
      - 'alexa:192.168.0.23'
      - 'desktop-wifi:192.168.0.13'
      - 'desktop:192.168.0.16'
      - 'masha-laptop:192.168.0.15'
      - 'tablet:192.168.0.14'
      - 'synology:192.168.0.3'

      - 'prokopiv.xyz:192.168.0.2'
      - 'pihole.prokopiv.xyz:192.168.0.2'
      - 'grafana.prokopiv.xyz:192.168.0.2'
      - 'influxdb.prokopiv.xyz:192.168.0.2'
      - 'nextcloud.prokopiv.xyz:192.168.0.2'
      - 'portainer.prokopiv.xyz:192.168.0.2'
      - 'sshwifty.prokopiv.xyz:192.168.0.2'
      - 'qbittorrent.prokopiv.xyz:192.168.0.2'
      - 'filebrowser.prokopiv.xyz:192.168.0.2'
      - 'freshrss.prokopiv.xyz:192.168.0.2'
      - 'ntfy.prokopiv.xyz:192.168.0.2'
      - 'vpn.prokopiv.xyz:192.168.0.2'

  grafana:
    container_name: grafana
    image: grafana/grafana
    depends_on:
      - influxdb
      - mariadb
    user: '1000:1000'
    environment:
      - GF_AUTH_LOGIN_MAXIMUM_LIFETIME_DURATION=365d
      - GF_AUTH_TOKEN_ROTATION_INTERVAL_MINUTES=525600
    volumes:
      - './docker-data/grafana/var-lib-grafana/:/var/lib/grafana/'
      - './docker-data/grafana/etc-grafana/:/etc/grafana/'
      - './docker-data/grafana/var-log-grafana/:/var/log/grafana/'
    restart: unless-stopped

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    environment:
      - DOCKER_INFLUXDB_INIT_USERNAME=root
      - DOCKER_INFLUXDB_INIT_PASSWORD=root
      - DOCKER_INFLUXDB_INIT_ORG=vp
      - DOCKER_INFLUXDB_INIT_BUCKET=test
      - TZ=Europe/Kiev
    volumes:
      - './docker-data/influxdb/var-lib-influxdb2/:/var/lib/influxdb2/'
      - './docker-data/influxdb/etc-influxdb2/:/etc/influxdb2/'
    command:
      - '--session-length=525600'
    restart: unless-stopped

  mariadb:
    container_name: mariadb
    image: lscr.io/linuxserver/mariadb
    ports:
      - "3307:3306/tcp"
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=root
      - TZ=Europe/Kiev
    volumes:
      - './docker-data/mariadb/config/:/config/'
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped

  nextcloud:
    container_name: nextcloud
    image: nextcloud:27-apache
    restart: unless-stopped
    volumes:
      - './docker-data/nextcloud/var-www-html/:/var/www/html/'
    environment:
      - MYSQL_HOST=mariadb
      - REDIS_HOST=redis
      - TRUSTED_PROXIES=reverse-proxy
      - TRUSTED_DOMAINS=nextcloud.prokopiv.xyz
      - OVERWRITEHOST=nextcloud.prokopiv.xyz
    depends_on:
      - mariadb
      - redis

  portainer:
    container_name: portainer
    restart: unless-stopped
    image: portainer/portainer-ce:latest
    environment:
      - VIRTUAL_HOST=portainer.prokopiv.xyz
    volumes:
      - './docker-data/portainer/data/:/data/'
      - '/var/run/docker.sock:/var/run/docker.sock'

  ytbot:
    container_name: ytbot
    image: vprokopiv/ytbot:arm64
    env_file:
      - .env
    volumes:
      - './docker-data/ytbot/logs/:/logs/'
    restart: unless-stopped

  homer:
    container_name: homer
    image: b4bz/homer:latest
    volumes:
      - './docker-data/homer/www-assets/:/www/assets/'
      - './homer/config.yml:/www/assets/config.yml'
    restart: unless-stopped

  sshwifty:
    container_name: sshwifty
    image: niruix/sshwifty:latest
    volumes:
      - './sshwifty/sshwifty.conf.json:/sshwifty.conf.json'
      - './sshwifty/keys/:/keys/'
    environment:
      - "SSHWIFTY_CONFIG=/sshwifty.conf.json"
    restart: unless-stopped

  system:
    container_name: system
    build: ./system/
    image: vprokopiv/pi-system
    restart: unless-stopped
    volumes:
      - /dev/mem:/dev/mem
      - /dev/i2c-1:/dev/i2c-1
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host-proc:ro
      - /home/pi/Torrents/downloads/:/downloads/:ro
    privileged: true
    environment:
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=CZeJBeLiu59JGllsE8q6Cilh22SDrs45mAR9oMlxJigBxtvAXIpP0GvFfBL2y8MNriCbDgcXk04DSHvs_eFnEQ==
      - INFLUX_ORG=vp
      - INFLUX_BUCKET=monitoring
      - TZ=Europe/Kiev

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - WEBUI_PORT=8097
    volumes:
      - ./docker-data/qbittorrent/config/:/config/
      - /home/pi/NAS/torrents/:/downloads/
    restart: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Kiev
    volumes:
      - ./docker-data/filebrowser/database.db:/database.db
      - ./filebrowser/.filebrowser.json:/.filebrowser.json
      - /home/pi/:/srv
    restart: unless-stopped

  freshrss:
    image: freshrss/freshrss:edge-arm
    container_name: freshrss
    volumes:
      - ./docker-data/freshrss/var-www-data/:/var/www/FreshRSS/data/
      # Optional volume for storing third-party extensions
      - ./docker-data/freshrss/var-www-extensions:/var/www/FreshRSS/extensions/
      # Optional file providing custom global settings (used before a FreshRSS install)
      # - ./config.custom.php:/var/www/FreshRSS/data/config.custom.php
      # Optional file providing custom user settings (used before a new user is created)
      # - ./config-user.custom.php:/var/www/FreshRSS/data/config-user.custom.php
    env_file:
      - ./freshrss/.env
    environment:
      TZ: 'Europe/Kiev'
      CRON_MIN: '2,32'
      LISTEN: '0.0.0.0:80'
    restart: unless-stopped
    depends_on:
      - mariadb

  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve
    environment:
      - TZ=Europe/Kiev
    volumes:
      - ./docker-data/ntfy/var-cache-ntfy/:/var/cache/ntfy/
      - ./docker-data/ntfy/etc-ntfy:/etc/ntfy/
    restart: unless-stopped

  openvpn:
    container_name: openvpn
    image: vprokopiv/openvpn:arm64
    cap_add:
     - NET_ADMIN
    ports:
     - "1194:1194/udp"
    restart: unless-stopped
    volumes:
     - ./openvpn/:/etc/openvpn/

  invidious:
    container_name: invidious
    image: quay.io/invidious/invidious:latest-arm64
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # https://github.com/iv-org/invidious/blob/master/config/config.example.yml
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: invidious-db
          port: 5432
        check_tables: true
        # external_port:
        # domain:
        # https_only: false
        # statistics_enabled: false
        hmac_key: "rieuwoifjsdlkjfaowiejfalkdjoiwe"
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
        - invidious-db
  
  invidious-db:
    container_name: invidious-db
    image: docker.io/library/postgres:14
    restart: unless-stopped
    volumes:
      - ./docker-data/invidious-db/data/:/var/lib/postgresql/data
      - ./docker-data/invidious-db/config/sql:/config/sql
      - ./docker-data/invidious-db/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io
    container_name: changedetection
    hostname: changedetection
    volumes:
      - ./docker-data/changedetection/datastore/:/datastore
    environment:
      - "WEBDRIVER_URL=http://browser-chrome:4444/wd/hub"
      - FETCH_WORKERS=2
    ports:
      - 5000:5000
    depends_on:
      - browser-chrome

  browser-chrome:
    container_name: browser-chrome
    hostname: browser-chrome
    image: seleniarm/standalone-chromium
    ports:
      - 7900:7900
    environment:
      - VNC_NO_PASSWORD=1
      - SCREEN_WIDTH=1900
      - SCREEN_HEIGHT=1000
      - SCREEN_DEPTH=24
    volumes:
      # Workaround to avoid the browser crashing inside a docker container
      # See https://github.com/SeleniumHQ/docker-selenium#quick-start
      - /dev/shm:/dev/shm
    restart: unless-stopped
