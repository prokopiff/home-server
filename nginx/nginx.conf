http {
	upstream syncthing {
		server 172.17.0.1:8384;
	}

	upstream grafana {
		server grafana:3000;
	}

	upstream influxdb {
		server influxdb:8086;
	}

	upstream pihole {
		server pihole:80;
	}

	upstream nextcloud {
		server nextcloud:80;
	}
	
	upstream portainer {
		server portainer:9000;
	}

	upstream homer {
		server homer:8080;
	}
	
	upstream jellyfin {
		server jellyfin:8096;
	}
	
	upstream qbittorrent {
		server qbittorrent:8097;
	}
		
	upstream sshwifty {
		server sshwifty:8182;
	}

	upstream filebrowser {
		server filebrowser:80;
	}

	upstream freshrss {
		server freshrss:80;
	}

	upstream ntfy {
		server ntfy:80;
	}

	map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

	server {
		listen 443 ssl http2 default_server;
		listen [::]:443 ssl http2 default_server;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name pi.hole;

		location / {
			proxy_pass http://homer;
			add_header Access-Control-Allow-Origin *;
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name pihole.pi.hole;

		location / {
			proxy_pass http://pihole/admin/;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;
			proxy_redirect off;
			proxy_hide_header Access-Control-Allow-Origin;
			proxy_hide_header Access-Control-Allow-Methods;
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Methods 'OPTIONS, HEAD, GET';
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name grafana.pi.hole;

		location / {
			proxy_pass http://grafana;
			add_header Access-Control-Allow-Origin *;
		}
	}
	

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name influxdb.pi.hole;

		location / {
			proxy_pass http://influxdb;

			proxy_redirect default;
			proxy_http_version 1.1;
			proxy_set_header Connection "";

			proxy_set_header   Host			 $host;
			proxy_set_header   X-Real-IP		$remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
			proxy_max_temp_file_size 0;
			proxy_connect_timeout	  240;
			proxy_send_timeout		 240;
			proxy_read_timeout		 240;
			expires -1;
			add_header Cache-Control private;
			add_header Access-Control-Allow-Origin *;
		}
	}
	
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name nextcloud.pi.hole;

		location / {
			proxy_pass http://nextcloud;
			add_header Access-Control-Allow-Origin *;
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name portainer.pi.hole;

		location / {
			proxy_pass http://portainer;

			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Upgrade $http_upgrade;
    		proxy_set_header Connection "upgrade";
			add_header Access-Control-Allow-Origin 'https://pi.hole';
			add_header Access-Control-Allow-Methods 'OPTIONS, HEAD, GET';
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name sshwifty.pi.hole;

		location / {
			proxy_pass http://sshwifty;
			proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
			add_header Access-Control-Allow-Origin *;
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name jellyfin.pi.hole;

		location / {
			proxy_pass http://jellyfin;

			proxy_pass_request_headers on;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host $http_host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $http_connection;
			proxy_buffering off;
			proxy_hide_header Access-Control-Allow-Origin;
			add_header Access-Control-Allow-Origin *;
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name qbittorrent.pi.hole;

		location / {
			proxy_pass http://qbittorrent;

			proxy_http_version 1.1;
	    
	        # proxy_set_header   Host               127.0.0.1:30000;
	        proxy_set_header   X-Forwarded-Host   $http_host;
	        proxy_set_header   X-Forwarded-For    $remote_addr;
			add_header Access-Control-Allow-Origin *;
	    
	        # not used by qBittorrent
	        #proxy_set_header   X-Forwarded-Proto  $scheme;
	        #proxy_set_header   X-Real-IP          $remote_addr;
	    
	        # optionally, you can adjust the POST request size limit, to allow adding a lot of torrents at once
	        #client_max_body_size 100M;
	    
	        # Since v4.2.2, is possible to configure qBittorrent
	        # to set the "Secure" flag for the session cookie automatically.
	        # However, that option does nothing unless using qBittorrent's built-in HTTPS functionality.
	        # For this use case, where qBittorrent itself is using plain HTTP
	        # (and regardless of whether or not the external website uses HTTPS),
	        # the flag must be set here, in the proxy configuration itself.
	        # Note: If this flag is set while the external website uses only HTTP, this will cause
	        # the login mechanism to not work without any apparent errors in console/network resulting in "auth loops".
	        proxy_cookie_path  /                  "/; Secure";
	        # proxy_cookie_path  /                  "/";
		}
	}
	
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name filebrowser.pi.hole;

		location / {
			proxy_pass http://filebrowser;

			proxy_pass_request_headers on;
    
            proxy_set_header Host $host;
    
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
			add_header Access-Control-Allow-Origin pi.hole;
    
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
    
            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            proxy_buffering off;
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name freshrss.pi.hole;

		location / {
			proxy_pass http://freshrss;

			proxy_pass_request_headers on;
    
            proxy_set_header Host $host;
    
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
			proxy_hide_header Access-Control-Allow-Origin;
			add_header Access-Control-Allow-Origin *;
    
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
    
            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            proxy_buffering off;
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name syncthing.pi.hole;

		location / {
			proxy_pass http://syncthing;

			proxy_pass_request_headers on;
    
            proxy_set_header Host $host;
    
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
    
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
			add_header Access-Control-Allow-Origin *;
    
            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            proxy_buffering off;
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;

		server_name ntfy.pi.hole;

		location / {
			proxy_pass http://ntfy;

			proxy_pass_request_headers on;
    
            proxy_http_version 1.1;

			proxy_buffering off;
			proxy_request_buffering off;
			proxy_redirect off;

			proxy_set_header Host $http_host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_hide_header Access-Control-Allow-Origin;
			add_header Access-Control-Allow-Origin *;

			proxy_connect_timeout 3m;
			proxy_send_timeout 3m;
			proxy_read_timeout 3m;
		}
	}
}

events {
	
}
